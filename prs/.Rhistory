paste(" ","hehe")
require(forestplot)
??forestplot
crc <- data.frame(g1=rnorm(10), g2=rnorm(10)+0.5)
normal <- data.frame(g1=rnorm(10), g2=rnorm(10))
df <- crc-normal
df_quantile <- apply(df, 2, function(x){round(quantile(x,c(0.25,0.5,0.75)),digits=2)})
df_t <- t(df_quantile)
df_d <- as.data.frame(df_t)
df_str <- as.matrix(df_t)
forestplot(df_str)
require(forestplot)
crc <- data.frame(g1=rnorm(10), g2=rnorm(10)+0.5)
normal <- data.frame(g1=rnorm(10), g2=rnorm(10))
df <- crc-normal
#输入格式为四分位
df_quantile <- apply(df, 2, function(x){round(quantile(x,c(0.25,0.5,0.75)),digits=2)})
df_t <- t(df_quantile)
df_t
view
View()
??forestplot
structure(list(
mean  = c(NA, NA, 0.578, 0.165, 0.246, 0.700, 0.348, 0.139, 1.017, NA, 0.531),
lower = c(NA, NA, 0.372, 0.018, 0.072, 0.333, 0.083, 0.016, 0.365, NA, 0.386),
upper = c(NA, NA, 0.898, 1.517, 0.833, 1.474, 1.455, 1.209, 2.831, NA, 0.731)),
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
cochrane_from_rmeta <-
structure(list(
mean  = c(NA, NA, 0.578, 0.165, 0.246, 0.700, 0.348, 0.139, 1.017, NA, 0.531),
lower = c(NA, NA, 0.372, 0.018, 0.072, 0.333, 0.083, 0.016, 0.365, NA, 0.386),
upper = c(NA, NA, 0.898, 1.517, 0.833, 1.474, 1.455, 1.209, 2.831, NA, 0.731)),
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
cochrane_from_rmeta
tabletext<-cbind(
c("", "Study", "Auckland", "Block",
"Doran", "Gamsu", "Morrison", "Papageorgiou",
"Tauesch", NA, "Summary"),
c("Deaths", "(steroid)", "36", "1",
"4", "14", "3", "1",
"8", NA, NA),
c("Deaths", "(placebo)", "60", "5",
"11", "20", "7", "7",
"10", NA, NA),
c("", "OR", "0.58", "0.16",
"0.25", "0.70", "0.35", "0.14",
"1.02", NA, "0.53"))
tabletext
forestplot(tabletext,
cochrane_from_rmeta,new_page = TRUE,
is.summary=c(TRUE,TRUE,rep(FALSE,8),TRUE),
clip=c(0.1,2.5),
xlog=TRUE,
col=fpColors(box="royalblue",line="darkblue", summary="royalblue"))
study <- cbind(c("", "Study", "Auckland", "Block"), c("", "OR", "0.58", "0.16"))
forestplot(study,df_str)
df_d <- as.data.frame(df_t)
df_str <- as.matrix(df_t)
study <- cbind(c("", "Study", "Auckland", "Block"), c("", "OR", "0.58", "0.16"))
forestplot(study,df_str)
study <- cbind(c("Study", "Auckland", "Block"), c("OR", "0.58", "0.16"))
forestplot(study,df_str)
study <- cbind(c("Auckland", "Block"), c("0.58", "0.16"))
forestplot(study,df_str)
study <- cbind(c("Auckland", "Block"), c("", ""))
forestplot(study,df_str)
forestplot(labeltext=study,df_str, new_page = T)
rep(FALSE,3)
forestplot(labeltext=study,df_str, new_page = T, is.summary = c(T,F,F))
forestplot(labeltext=study,df_str, new_page = T, is.summary = c(TRUE,FALSE,FALSE))
forestplot(labeltext=study, df_str)
study <- cbind(c("study","Auckland", "Block"), c("","", ""))
forestplot(labeltext=study, df_str, new_page = T, is.summary = c(TRUE,FALSE,FALSE))
df_str
df_str[1]
df_str[,:]
df_str[2,2]
df_str[1,1]
df_str[1:,1]
df_str[1:3,1]
df_str[1:2,1]
df_d$`25%`
class(df_d$`25%`)
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`)
study <- cbind(c("Auckland", "Block"), c("", ""))
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`)
forestplot()
forestplot
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`, new_page = T, is.summary = c(TRUE,FALSE, FALSE))
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`, new_page = T, is.summary = c(FALSE, TRUE))
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`, new_page = T, is.summary = c(FALSE, FALSE, TRUE))
forestplot(labeltext=study, mean = df_d$`50%`, lower = df_d$`25%`, upper = df_d$`75%`, new_page = T, is.summary = c(FALSE, FALSE, TRUE), xlog = T)
#PCoA
library(vegan)
library(tidyverse)
otu <- read.delim("/Users/congliu/Downloads/16s_PCoA/otu_table.txt", row.names = 1, sep = '\t', stringsAsFactors = F)
otu
otu <- data_frame(t(otu))
head(otu)
distance <- vegan::vegdist(otu, method = 'bray')
head(distance)
distance
str(distance)
pcoa <- cmdscale(distance, k = (nrow(otu) - 1), eig = TRUE)
ordiplot(scores(pcoa)[ ,c(1, 2)], type = ‘t’)
ordiplot(scores(pcoa)[ ,c(1, 2)], type = 't')
summary(pcoa)
pcoa$eig
point <- data.frame(pcoa$points)
point
fix(point)
species <- wascores(pcoa$points[, 1:2], otu)
species <- wascores(pcoa$points[,1:2], otu)
otu <- data.frame(t(otu))
distance <- vegan::vegdist(otu, method = 'bray')
pcoa <- cmdscale(distance, k = (nrow(otu) - 1), eig = TRUE)
otu <- read.delim("/Users/congliu/Downloads/16s_PCoA/otu_table.txt", row.names = 1, sep = '\t', stringsAsFactors = F,
check.names = FALSE)
otu <- data.frame(t(otu))
distance <- vegan::vegdist(otu, method = 'bray')
pcoa <- cmdscale(distance, k = (nrow(otu) - 1), eig = TRUE)
ordiplot(scores(pcoa)[ ,c(1, 2)], type = 't')
pcoa$eig
point <- data.frame(pcoa$points)
species <- wascores(pcoa$points[,1:2], otu)
fix(species)
#
pcoa_eig <- (pcoa$eig)[1:2] / sum(pcoa$eig)
pcoa_eig
#提取样本点坐标（前两轴）
sample_site <- data.frame({pcoa$point})[1:2]
sample_site$names <- rownames(sample_site)
names(sample_site)[1:2] <- c('PCoA1', 'PCoA2')
#为样本点坐标添加分组信息
sample_site <- merge(sample_site, group, by = 'names', all.x = TRUE)
#可选输出，例如输出为 csv 格式
write.csv(sample_site, 'sample_site.csv', quote = F)
sample_site$site <- factor(sample_site$site, levels = c('A', 'B', 'C', 'D'))
sample_site
sample_site
#提取样本点坐标（前两轴）
sample_site <- data.frame({pcoa$point})[1:2]
sample_site
sample_site$names <- rownames(sample_site)
sample_site
names(sample_site)[1:2] <- c('PCoA1', 'PCoA2')
sample_site
#为样本点坐标添加分组信息
group <- read.delim('/Users/congliu/Downloads/16s_PCoA/group.txt', sep = '\t', stringsAsFactors = FALSE)
sample_site <- merge(sample_site, group, by = 'names', all.x = TRUE)
sample_site
sample_site$site <- factor(sample_site$site, levels = c('A', 'B', 'C', 'D'))
sample_site$deal <- factor(sample_site$deal, levels = c('low', 'high'))
sample_site$time <- factor(sample_site$time, levels = c('1', '2', '3', '4'))
library(plyr)
group_border <- ddply(sample_site, 'site', function(df) df[chull(df[[2]], df[[3]]), ])
#注：group_border 作为下文 geom_polygon() 的做图数据使用
pcoa_plot <- ggplot(sample_site, aes(PCoA1, PCoA2, group = site)) +
theme(panel.grid = element_line(color = 'gray', linetype = 2, size = 0.1), panel.background = element_rect(color = 'black', fill = 'transparent'), legend.key = element_rect(fill = 'transparent')) + #去掉背景框
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
geom_polygon(data = group_border, aes(fill = site)) + #绘制多边形区域
geom_point(aes(color = time, shape = deal), size = 1.5, alpha = 0.8) + #可在这里修改点的透明度、大小
scale_shape_manual(values = c(17, 16)) + #可在这里修改点的形状
scale_color_manual(values = c('yellow', 'orange', 'red', 'red4')) + #可在这里修改点的颜色
scale_fill_manual(values = c('#C673FF2E', '#73D5FF2E', '#49C35A2E', '#FF985C2E')) + #可在这里修改区块的颜色
guides(fill = guide_legend(order = 1), shape = guide_legend(order = 2), color = guide_legend(order = 3)) + #设置图例展示顺序
labs(x = paste('PCoA axis1: ', round(100 * pcoa_eig[1], 2), '%'), y = paste('PCoA axis2: ', round(100 * pcoa_eig[2], 2), '%')) +
#可通过修改下面四句中的点坐标、大小、颜色等，修改“A、B、C、D”标签
annotate('text', label = 'A', x = -0.31, y = -0.15, size = 5, colour = '#C673FF') +
annotate('text', label = 'B', x = -0.1, y = 0.3, size = 5, colour = '#73D5FF') +
annotate('text', label = 'C', x = 0.1, y = 0.15, size = 5, colour = '#49C35A') +
annotate('text', label = 'D', x = 0.35, y = 0, size = 5, colour = '#FF985C')
ggsave('PCoA.png', pcoa_plot, width = 6, height = 5)
pcoa_plot
getwd()
getwd()
getwd
??getwd
?getwd
for (i in 1:10) {
}
for (i in 1:10) {
cat(i)
}
1:10
class(1:10)
##ggplot2 画森林图
library(tidyverse)
##ggplot2 画森林图
library(tidyverse, quietly = TRUE)
library(BuenColors, quietly = TRUE)
print("Rscript SurvivalForest.R 输入文件路径 输出目录 文件名 Y轴标题")
1 != 2
t.test(c(0,0,0,20), c(0,0))
p.adjust.methods
